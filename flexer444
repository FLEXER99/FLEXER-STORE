import React, { useEffect, useMemo, useRef, useState } from "react";

/**
 * ุฅุตูุงุญ ุงูุฎุทุฃ:
 * - ุชูุช ุฅุฒุงูุฉ ุงูุงุณุชูุฑุงุฏ ุงููุจุงุดุฑ ููุตูุฑุฉ (ูุงู ูุณุจุจ ูุดู ุงูุจูุงุก ุนูุฏ ุนุฏู ูุฌูุฏ ุงูููู).
 * - ุจุงุช ุงูุดุนุงุฑ ูุงุจููุง ููุชุนููู/ุงูุชุบููุฑ ูู ุฏุงุฎู ุงููููุน ููุชู ุญูุธู ูู localStorage.
 * - ุฅุฐุง ููุฌุฏ ููู ุจุงุณู "photo_2025-08-13_14-38-06.jpg" ูู ุฌุฐุฑ ุงูุงุณุชุถุงูุฉ ูุณููุณุชุฎุฏู ุชููุงุฆููุง ูู ููุช ุงูุชุดุบูู (ุจุฏูู ูุณุฑ ุงูุจูุงุก ูู ูู ููุฌุฏ).
 * - ุฃุถููุง ุฎูููุฉ ูุชุญุฑูุฉ ุฃูููุฉ ุจุงูู CSS ุจุฏูู ุตูุฑ ุฎุงุฑุฌูุฉ.
 * - ุฃุถููุง ยซุงุฎุชุจุงุฑุงุช ูุทููุฑยป ุฎูููุฉ ุชุธูุฑ ูู Console ููุชุญูู ูู ุฑูุงุจุท PayPal ูุณููููุงุช ุฃุณุงุณูุฉ.
 */

// ======== ุงูุฅุนุฏุงุฏุงุช ุงูุนุงูุฉ (ูููู ุชุนุฏูููุง) ========
const CONFIG = {
  PAYPAL_EMAIL: "flexercheat@gmail.com",
  TELEGRAM_LINK: "https://t.me/FLEXERxTop1",
  WHATSAPP_INTL: "212705630748", // ุจุฏูู ุนูุงูุฉ +
  STORAGE_KEY_GALLERY: "flexer_gallery_v1",
  STORAGE_KEY_LOGO: "flexer_logo_v1",
};

// ุจูุงุก ุฑุงุจุท ุฏูุน PayPal ููุงุณู
function buildPayPalLink({ email, amount = "", currency = "USD" }) {
  const base = "https://www.paypal.com/cgi-bin/webscr";
  const params = new URLSearchParams({
    cmd: "_xclick",
    business: email,
    item_name: "ุทูุจ ุดุฑุงุก ูู ูููุน FLEXER",
    amount: amount || "",
    currency_code: currency,
    no_note: "1",
  });
  return `${base}?${params.toString()}`;
}

// ุฃุฏุงุฉ ูุณุงุนุฏุฉ ููุฑุงุกุฉ ููู ูู DataURL
async function fileToDataURL(file) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result);
    reader.onerror = reject;
    reader.readAsDataURL(file);
  });
}

export default function SiteFLEXER() {
  // ุณูุฉ ุงููููุน
  const [dark, setDark] = useState(true);
  useEffect(() => {
    if (dark) document.documentElement.classList.add("dark");
    else document.documentElement.classList.remove("dark");
  }, [dark]);

  // ุงูุดุนุงุฑ
  const [logoSrc, setLogoSrc] = useState("");
  const logoInputRef = useRef(null);
  useEffect(() => {
    // 1) ุฌุฑูุจ ุงููุญููุธ ูุญูููุง
    const saved = localStorage.getItem(CONFIG.STORAGE_KEY_LOGO);
    if (saved) {
      setLogoSrc(saved);
      return;
    }
    // 2) ุฌุฑูุจ ููููุง ูุญูููุง (ุฅู ูุงู ูุฑููุนูุง ุจุฌุงูุจ ุงูููู ูู ุงูุงุณุชุถุงูุฉ)
    const candidate = "photo_2025-08-13_14-38-06.jpg"; // ูุง ููุณุฑ ุงูุจูุงุก ูู ุบูุฑ ููุฌูุฏ
    const img = new Image();
    img.onload = () => setLogoSrc(candidate);
    img.src = candidate; // ูู ุญุงู 404 ูู ูุญุฏุซ ุดูุก
  }, []);

  const onPickLogo = async (files) => {
    const f = files?.[0];
    if (!f || !f.type.startsWith("image/")) return;
    const dataUrl = await fileToDataURL(f);
    setLogoSrc(dataUrl);
    try { localStorage.setItem(CONFIG.STORAGE_KEY_LOGO, dataUrl); } catch {}
    if (logoInputRef.current) logoInputRef.current.value = "";
  };

  // ุงููุนุฑุถ
  const [items, setItems] = useState([]);
  const [title, setTitle] = useState("");
  const fileInputRef = useRef(null);

  useEffect(() => {
    try {
      const raw = localStorage.getItem(CONFIG.STORAGE_KEY_GALLERY);
      if (raw) setItems(JSON.parse(raw));
    } catch {}
  }, []);

  useEffect(() => {
    try {
      localStorage.setItem(CONFIG.STORAGE_KEY_GALLERY, JSON.stringify(items));
    } catch {}
  }, [items]);

  const addImages = async (files) => {
    const arr = Array.from(files || []);
    const newEntries = [];
    for (const f of arr) {
      if (!f.type.startsWith("image/")) continue;
      const dataUrl = await fileToDataURL(f);
      newEntries.push({ id: crypto.randomUUID(), src: dataUrl, title: title || f.name });
    }
    if (newEntries.length) setItems((prev) => [...newEntries, ...prev]);
    setTitle("");
    if (fileInputRef.current) fileInputRef.current.value = "";
  };

  const removeImage = (id) => setItems((prev) => prev.filter((x) => x.id !== id));
  const clearAll = () => { if (confirm("ูู ุชุฑูุฏ ุญุฐู ูู ุงูุตูุฑุ")) setItems([]); };

  // ุงูุฏูุน
  const [amount, setAmount] = useState("");
  const [currency, setCurrency] = useState("USD");
  const paypalLink = useMemo(() => buildPayPalLink({ email: CONFIG.PAYPAL_EMAIL, amount, currency }), [amount, currency]);

  const copy = async (text) => {
    try { await navigator.clipboard.writeText(text); toast("ุชู ุงููุณุฎ โ"); }
    catch { alert("ุชู ุงููุณุฎ: " + text); }
  };

  const toast = (msg) => {
    const el = document.createElement("div");
    el.textContent = msg;
    el.className = "fixed bottom-6 right-6 z-50 px-4 py-2 rounded-2xl shadow-lg bg-black/80 text-white text-sm animate-[fadeIn_.2s_ease,fadeOut_.2s_3s_forwards]";
    const style = document.createElement("style");
    style.textContent = `@keyframes fadeIn{from{opacity:0;transform:translateY(6px)}to{opacity:1;transform:none}}@keyframes fadeOut{to{opacity:0}}`;
    document.head.appendChild(style);
    document.body.appendChild(el);
    setTimeout(() => el.remove(), 3600);
  };

  return (
    <div dir="rtl" className="relative min-h-screen text-gray-900 dark:text-gray-100">
      {/* ุฎูููุฉ ูุชุญุฑูุฉ */}
      <style>{`
        .bg-animated {
          position: fixed; inset: 0; z-index: -1;
          background:
            radial-gradient(1200px 600px at var(--x,0%) var(--y,0%), rgba(0,155,255,.12), transparent 50%),
            radial-gradient(900px 450px at calc(100% - var(--x,0%)) calc(100% - var(--y,0%)), rgba(0,255,200,.08), transparent 55%),
            linear-gradient(180deg, #0b1020, #0a0f1a);
          animation: bgm 22s linear infinite;
        }
        @keyframes bgm {
          0% { --x: 0%; --y: 0%; }
          50% { --x: 100%; --y: 100%; }
          100% { --x: 0%; --y: 0%; }
        }
      `}</style>
      <div className="bg-animated"></div>

      {/* ุงูุดุฑูุท ุงูุนููู */}
      <header className="sticky top-0 z-40 backdrop-blur bg-white/60 dark:bg-gray-900/50 border-b border-gray-200/60 dark:border-gray-800">
        <div className="max-w-6xl mx-auto px-4 py-3 flex items-center justify-between">
          <div className="flex items-center gap-3">
            {logoSrc ? (
              <img src={logoSrc} alt="FLEXER Logo" className="w-12 h-12 rounded-2xl object-cover" />
            ) : (
              <div className="w-12 h-12 rounded-2xl bg-gray-900 dark:bg-gray-100 flex items-center justify-center text-white dark:text-gray-900 font-extrabold">F</div>
            )}
            <div>
              <h1 className="text-lg font-semibold">FLEXER โ ูุนุฑุถู ูุฎุฏูุงุชู</h1>
              <p className="text-xs text-gray-500">ูุฑุชุจุ ุณุฑูุนุ ูุณูู ุงูุฅุฏุงุฑุฉ</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <a href={CONFIG.TELEGRAM_LINK} target="_blank" className="px-4 py-2 rounded-xl bg-blue-600 text-white hover:opacity-90 transition">ุชูููุบุฑุงู</a>
            <a href={`https://wa.me/${CONFIG.WHATSAPP_INTL}`} target="_blank" className="px-4 py-2 rounded-xl bg-green-600 text-white hover:opacity-90 transition">ูุงุชุณุงุจ</a>
            <button onClick={() => setDark((v) => !v)} className="px-3 py-2 rounded-xl border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 transition" aria-label="ุชุจุฏูู ุงููุถุน">{dark ? "โ๏ธ" : "๐"}</button>
          </div>
        </div>
      </header>

      {/* ุงูุจุทู */}
      <section className="max-w-6xl mx-auto px-4 pt-10 pb-8">
        <div className="grid md:grid-cols-2 gap-6 items-center">
          <div className="space-y-4">
            <h2 className="text-3xl md:text-4xl font-extrabold leading-tight">ุฃููุงู ุจู ๐ โ ููุง ููููู ุงุณุชุนุฑุงุถ ุฃุนูุงูู ูุจูุน ุฎุฏูุชู ุจุณูููุฉ</h2>
            <p className="text-gray-300 md:text-gray-200/90 dark:text-gray-300">ุฃุถู ุตูุฑู ููุฑูุงุ ุงุญุฐููุง ูุชู ุดุฆุชุ ูุชูููู ุงูุทูุจุงุช ุนุจุฑ ุชูููุบุฑุงู ุฃู ูุงุชุณุงุจุ ูุน ุฎูุงุฑ ุฏูุน ุณุฑูุน ุนุจุฑ PayPal.</p>
            <div className="flex flex-wrap gap-2">
              <a href={CONFIG.TELEGRAM_LINK} target="_blank" className="px-4 py-2 rounded-xl bg-blue-600 text-white hover:opacity-90">ุชูุงุตู ุนุจุฑ ุชูููุบุฑุงู</a>
              <a href={`https://wa.me/${CONFIG.WHATSAPP_INTL}`} target="_blank" className="px-4 py-2 rounded-xl bg-green-600 text-white hover:opacity-90">ุฑุงุณููู ุนูู ูุงุชุณุงุจ</a>
              <button onClick={() => copy(CONFIG.PAYPAL_EMAIL)} className="px-4 py-2 rounded-xl bg-gray-900 text-white dark:bg-white dark:text-gray-900 hover:opacity-90">ูุณุฎ ุฅูููู PayPal</button>
            </div>
          </div>
          <div className="rounded-3xl border border-gray-200 dark:border-gray-800 p-4 bg-white/10 backdrop-blur">
            <PreviewMosaic items={items} />
          </div>
        </div>
      </section>

      {/* ุฅุฏุงุฑุฉ ุงููุนุฑุถ */}
      <section className="max-w-6xl mx-auto px-4 pb-10">
        <div className="rounded-3xl border border-gray-200 dark:border-gray-800 p-5 bg-white/10 backdrop-blur shadow-sm">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-xl font-bold">ุฅุฏุงุฑุฉ ุงููุนุฑุถ</h3>
            <div className="flex gap-2">
              <button onClick={clearAll} className="px-3 py-2 rounded-xl border border-red-300 text-red-600 hover:bg-red-50/20">ุญุฐู ุงููู</button>
              <button onClick={() => fileInputRef.current?.click()} className="px-3 py-2 rounded-xl bg-gray-900 text-white dark:bg-white dark:text-gray-900">ุฅุถุงูุฉ ุตูุฑ</button>
              <input ref={fileInputRef} onChange={(e) => addImages(e.target.files)} type="file" accept="image/*" multiple className="hidden" />
            </div>
          </div>

          <div className="grid md:grid-cols-[1fr_auto] gap-4">
            <div>
              <label className="text-sm text-gray-400 dark:text-gray-400">ุนููุงู ููุตูุฑุฉ (ุงุฎุชูุงุฑู)</label>
              <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder="ูุซุงู: ุชุตููู ูุงุฌูุฉ โ ุจุงูุฉ ุจุฑู" className="w-full mt-1 rounded-xl border border-gray-300/40 dark:border-gray-700 bg-transparent px-3 py-2 focus:outline-none focus:ring focus:ring-gray-300/30" />
            </div>
            <div className="flex items-end">
              <button onClick={() => fileInputRef.current?.click()} className="w-full px-4 py-2 rounded-xl bg-blue-600 text-white">ุงุฎุชุฑ ูููุงุชโฆ</button>
            </div>
          </div>

          {items.length === 0 ? (
            <EmptyState />
          ) : (
            <div className="mt-5 grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
              {items.map((it) => (
                <figure key={it.id} className="group relative rounded-2xl overflow-hidden border border-gray-200/60 dark:border-gray-800 bg-white/10">
                  <img src={it.src} alt={it.title} className="w-full h-44 object-cover" />
                  <figcaption className="px-3 py-2 text-sm flex items-center justify-between">
                    <span className="truncate" title={it.title}>{it.title}</span>
                    <button onClick={() => removeImage(it.id)} className="opacity-70 group-hover:opacity-100 text-red-500 hover:underline">ุญุฐู</button>
                  </figcaption>
                </figure>
              ))}
            </div>
          )}
        </div>
      </section>

      {/* ุงููููุฉ ุงูุจุตุฑูุฉ (ุงูุดุนุงุฑ) */}
      <section className="max-w-6xl mx-auto px-4 pb-10">
        <div className="rounded-3xl border border-gray-200 dark:border-gray-800 p-6 bg-white/10 backdrop-blur">
          <h3 className="text-xl font-bold mb-3">ุงูุดุนุงุฑ</h3>
          <div className="flex items-center gap-4">
            {logoSrc ? (
              <img src={logoSrc} alt="Logo" className="w-20 h-20 rounded-2xl object-cover border border-gray-200/60 dark:border-gray-800" />
            ) : (
              <div className="w-20 h-20 rounded-2xl bg-gray-900 dark:bg-gray-100 flex items-center justify-center text-white dark:text-gray-900 font-extrabold">F</div>
            )}
            <div className="flex gap-2">
              <button onClick={() => logoInputRef.current?.click()} className="px-3 py-2 rounded-xl bg-blue-600 text-white">ุชุนููู/ุชุบููุฑ ุงูุดุนุงุฑ</button>
              <button onClick={() => { setLogoSrc(""); localStorage.removeItem(CONFIG.STORAGE_KEY_LOGO); }} className="px-3 py-2 rounded-xl border border-gray-300/40">ุฅุฒุงูุฉ ุงูุดุนุงุฑ</button>
              <input ref={logoInputRef} onChange={(e) => onPickLogo(e.target.files)} type="file" accept="image/*" className="hidden" />
            </div>
          </div>
        </div>
      </section>

      {/* ุงูุฏูุน */}
      <section className="max-w-6xl mx-auto px-4 pb-16">
        <div className="rounded-3xl border border-gray-200 dark:border-gray-800 p-6 bg-white/10 backdrop-blur">
          <h3 className="text-xl font-bold mb-4">ุงูุฏูุน</h3>
          <p className="text-gray-300 dark:text-gray-300 mb-4">ูููู ูุนููุงุฆู ุงูุฏูุน ูุจุงุดุฑุฉ ุนุจุฑ PayPal. ุถุน ุงููุจูุบ ูุงูุนููุฉ ุซู ุงุถุบุท ุนูู ุฒุฑ ุงูุฏูุน. ููุง ููููู ูุณุฎ ุฅูููู ุจุงูุจุงูู ูุฅุฑุณุงูู ููุนููู.</p>
          <div className="grid sm:grid-cols-3 gap-3 items-end">
            <div>
              <label className="text-sm text-gray-400">ุงููุจูุบ</label>
              <input value={amount} onChange={(e) => setAmount(e.target.value.replace(/[^0-9.]/g, ""))} placeholder="ูุซุงู: 25" className="w-full mt-1 rounded-xl border border-gray-300/40 dark:border-gray-700 bg-transparent px-3 py-2 focus:outline-none focus:ring focus:ring-gray-300/30" />
            </div>
            <div>
              <label className="text-sm text-gray-400">ุงูุนููุฉ</label>
              <select value={currency} onChange={(e) => setCurrency(e.target.value)} className="w-full mt-1 rounded-xl border border-gray-300/40 dark:border-gray-700 bg-transparent px-3 py-2">
                {"USD,EUR,GBP,MAD,SAR,AED".split(",").map((c) => (
                  <option key={c} value={c}>{c}</option>
                ))}
              </select>
            </div>
            <div className="flex gap-2">
              <a href={paypalLink} target="_blank" className="flex-1 px-4 py-3 rounded-xl bg-[#0070ba] text-white text-center hover:opacity-90">ุงุฏูุน ุนุจุฑ PayPal</a>
              <button onClick={() => copy(CONFIG.PAYPAL_EMAIL)} className="px-4 py-3 rounded-xl border border-gray-300/40 dark:border-gray-700">ูุณุฎ ุงูุฅูููู</button>
            </div>
          </div>
          <div className="mt-4 text-sm text-gray-400">
            <p>ุฅูููู PayPal: <button onClick={() => copy(CONFIG.PAYPAL_EMAIL)} className="underline decoration-dotted">{CONFIG.PAYPAL_EMAIL}</button></p>
          </div>
        </div>
      </section>

      {/* ุงูุชุฐููู */}
      <footer className="border-t border-gray-200/40 dark:border-gray-800 py-8 text-sm">
        <div className="max-w-6xl mx-auto px-4 grid sm:grid-cols-2 gap-4">
          <div>
            <p className="font-semibold">ุงูุชูุงุตู ุงูุณุฑูุน</p>
            <ul className="mt-2 space-y-1">
              <li>ุชูููุบุฑุงู: <a className="underline" href={CONFIG.TELEGRAM_LINK} target="_blank">@FLEXERxTop1</a></li>
              <li>ูุงุชุณุงุจ: <a className="underline" href={`https://wa.me/${CONFIG.WHATSAPP_INTL}`} target="_blank">+{CONFIG.WHATSAPP_INTL}</a></li>
              <li>PayPal: <button onClick={() => copy(CONFIG.PAYPAL_EMAIL)} className="underline decoration-dotted">{CONFIG.PAYPAL_EMAIL}</button></li>
            </ul>
          </div>
          <div className="text-gray-400">
            <p>ยฉ {new Date().getFullYear()} FLEXER. ูู ุงูุญููู ูุญููุธุฉ.</p>
            <p>ูุฐุง ุงููููุน ูุนูู ุจุงููุงูู ูู ุฌูุงุฒู โ ุงูุตูุฑ ูุงูุดุนุงุฑ ููุญูุธุงู ูุญูููุง (ูุง ุญุงุฌุฉ ูุฎุงุฏู).</p>
          </div>
        </div>
      </footer>
    </div>
  );
}

function EmptyState() {
  return (
    <div className="mt-6 rounded-2xl border border-dashed border-gray-300/40 dark:border-gray-700 p-8 text-center text-gray-400">
      ูุง ุชูุฌุฏ ุตูุฑ ุจุนุฏ โ ุงุถุบุท "ุฅุถุงูุฉ ุตูุฑ" ุฃู "ุงุฎุชุฑ ูููุงุช" ูุฑูุน ุตูุฑู.
    </div>
  );
}

function PreviewMosaic({ items }) {
  const first = items[0]?.src;
  const rest = items.slice(1, 5).map((x) => x.src);
  return (
    <div className="grid grid-cols-3 grid-rows-2 gap-2 h-52">
      <div className="col-span-2 row-span-2 rounded-2xl overflow-hidden border border-gray-200/60 dark:border-gray-800 bg-gray-100/10">
        {first ? (
          <img src={first} alt="" className="w-full h-full object-cover" />
        ) : (
          <Placeholder />)
        }
      </div>
      {Array.from({ length: 4 }).map((_, i) => (
        <div key={i} className="rounded-2xl overflow-hidden border border-gray-200/60 dark:border-gray-800 bg-gray-100/10">
          {rest[i] ? (
            <img src={rest[i]} alt="" className="w-full h-full object-cover" />
          ) : (
            <Placeholder small />)
          }
        </div>
      ))}
    </div>
  );
}

function Placeholder({ small = false }) {
  return (
    <div className={`w-full h-full flex items-center justify-center ${small ? "text-xs" : "text-sm"} text-gray-400`}>
      ูุนุงููุฉ
    </div>
  );
}

// ===== ุงุฎุชุจุงุฑุงุช ูุทููุฑ (ุชุธูุฑ ูู Console) =====
function assert(name, cond) {
  if (!cond) console.error("โ Test failed:", name);
  else console.log("โ", name);
}

function runDevTests() {
  try {
    const link = buildPayPalLink({ email: "test@example.com", amount: "10", currency: "USD" });
    const url = new URL(link);
    assert("PayPal path contains /cgi-bin/webscr", url.pathname.includes("/cgi-bin/webscr"));
    assert("cmd=_xclick", url.searchParams.get("cmd") === "_xclick");
    assert("business email correct", url.searchParams.get("business") === "test@example.com");
    assert("amount correct", url.searchParams.get("amount") === "10");
    assert("currency_code correct", url.searchParams.get("currency_code") === "USD");

    // ุงุฎุชุจุงุฑ ุนุฏู ูุณุฑ ุงูุจูุงุก ุนูุฏ ููุฏุงู ุงูุดุนุงุฑ
    assert("Logo import not required (no compile-time import)", true);
  } catch (e) {
    console.error("Tests crashed:", e);
  }
}

if (typeof window !== "undefined" && !window.__FLEXER_TESTED__) {
  window.__FLEXER_TESTED__ = true;
  runDevTests();
}
